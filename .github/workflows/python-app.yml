# GitHub Actions for Python CI/CD
name: Python CI/CD Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.3"]  # ‚úÖ Match local Python version

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pylint pytest-cov pytest-xdist pytest-timeout
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Debug - List all files
        run: |
          echo "üìÇ Listing all files in workspace:"
          ls -R
          echo "üìÇ Checking app/plugins directory:"
          ls -R app/plugins || echo "‚ö†Ô∏è No plugins found"

      - name: Install Project (Editable Mode)
        run: |
          if [ -f setup.py ]; then
            pip install -e .
          else
            echo "‚ö†Ô∏è setup.py not found. Skipping editable install."
          fi

      - name: Ensure required directories and files exist
        run: |
          mkdir -p logs
          touch logs/app.log
          touch history.csv
          echo "id,a,b,operation,result" > history.csv  # ‚úÖ Ensure history.csv is not empty
          echo "‚úÖ Logs and history file initialized"

      - name: Debug - Check history.csv contents
        run: |
          echo "üîç Checking history.csv contents:"
          cat history.csv || echo "‚ö†Ô∏è history.csv is empty!"

      - name: Run Linter (Pylint)
        run: |
          CHANGED_FILES=$(git diff --name-only origin/main | grep '\.py$' || echo "")
          if [ -n "$CHANGED_FILES" ]; then pylint $CHANGED_FILES --exit-zero; else echo "No Python files changed"; fi

      - name: Run Tests with Coverage (Sequential Execution to Match Local)
        run: |
          pytest --cov --cov-report=term-missing --cov-fail-under=89.5
          echo "‚úÖ Pytest completed"
